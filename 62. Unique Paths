class Solution {
     Integer Memoization[][] = new Integer[101][101];
    public int uniquePaths(int m, int n) {

      return solve(0,0,m, n);
        
    }
    int solve(int i, int j, int m, int n)
    {
      if(i>=m || j>=n)
      {
        return 0;
      }
      if(i==m-1 && j==n-1)
      {
        return 1;
      }
      if(Memoization[i][j]!=null)
      {
        return Memoization[i][j];
      }
      int down = solve(i+1, j, m, n);
      int right = solve(i, j+1, m, n);

      return Memoization[i][j]=down + right;
    }
}

//Time Complexity O(n*m)
